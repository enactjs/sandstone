// Alert.module.less
//
@import "../styles/mixins.less";
@import "../styles/variables.less";
@import "../styles/skin.less";

.alert {

	&.noImage { /* Needed to prevent global class being added in the DOM */ }

	&.fullscreen {
		.alertImage {
			margin-bottom: @sand-alert-fullscreen-image-spacing;
		}

		.title,
		.content {
			max-width: @sand-alert-fullscreen-max-width;
		}

		.content {
			margin: 0;
			overflow: hidden;
			max-height: 60%; // Set a reasonable cutoff for a maximum bound
		}

		&.maxButtons {
			.buttonContainer {
				margin-top: @sand-alert-max-buttons-margin-top;
			}
		}

		.title {
			.sand-font-size(@sand-alert-title-font-size, @sand-tallglyph-alert-title-font-size);
		}

		.buttonContainer {
			margin-top: @sand-alert-buttons-margin-top;

			// Every buttonCell after the first one
			.buttonCell + .buttonCell {
				margin-top: @sand-alert-fullscreen-button-spacing;
			}
		}
	}

	&.overlay {
		.alertImage {
			margin: @sand-alert-overlay-image-margin;
		}

		.buttonContainer {
			box-sizing: border-box;
			margin: @sand-alert-overlay-buttons-margin;
			.margin-start-end(
				.extract(@sand-alert-overlay-buttons-margin, left)[],
				.extract(@sand-alert-overlay-buttons-margin, right)[]
			);

			// Every buttonCell after the first one
			.buttonCell + .buttonCell {
				margin-top: @sand-alert-overlay-button-spacing;
			}
		}

		.content {
			.sand-alert-overlay-content();
			width: @sand-alert-overlay-content-width;
			.margin-start-end(@sand-alert-overlay-image-text-gap, @sand-alert-overlay-text-button-gap);
			margin-bottom: 0;

			:global(.enact-locale-ja) &,
			:global(.enact-locale-zh) & {
				overflow-wrap: normal;
				word-break: normal;
			}
		}

		&.noImage {
			.content {
				.margin-start-end(@sand-alert-overlay-noimage-text-gap, @sand-alert-overlay-text-button-gap);
			}
		}
	}
}

.popup {
	&.overlay {
		width: fit-content;
		margin-left: auto;
		margin-right: auto;
		margin-bottom: @sand-alert-overlay-margin-bottom;

		.body {
			border-radius: @sand-alert-overlay-border-radius;
			padding-top: @sand-alert-overlay-padding-top-bottom;
			padding-bottom: @sand-alert-overlay-padding-top-bottom;
			.padding-start-end(@sand-alert-overlay-padding-left, @sand-alert-overlay-padding-right);
		}
	}

	.applySkins({
		background-color: @sand-alert-bg-color;

		&.overlay {
			background-color: @sand-alert-overlay-bg-color;
			box-shadow: @sand-alert-overlay-shadow;
		}
	});
}
