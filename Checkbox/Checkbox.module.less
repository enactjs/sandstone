// Checkbox.module.less
//
@import "../styles/variables.less";
@import "../styles/mixins.less";
@import "../styles/skin.less";

// Local mixin to make rule application more consistent.
.checkboxColors (@color, @bg, @border) {
	color: @color;
	background-color: @bg;
	box-shadow: 0 0 0 @sand-checkbox-border-width @border;
}

.checkbox {
	.applySkins({
		.checkboxColors(@sand-checkbox-color, @sand-checkbox-bg-color, @sand-checkbox-border-color);
		border-radius: @sand-checkbox-border-radius;
		margin: 0;  // Needed to apply here insetad of on `.checkbox` due to .icon.size precedence :(

		&.selected {
			.checkboxColors(@sand-checkbox-selected-color, @sand-checkbox-selected-bg-color, @sand-checkbox-selected-border-color);
		}

		.focus({
			.checkboxColors(@sand-checkbox-focus-color, @sand-checkbox-focus-bg-color, @sand-checkbox-focus-border-color);

			&.selected {
				.checkboxColors(@sand-checkbox-selected-focus-color, @sand-checkbox-selected-focus-bg-color, @sand-checkbox-selected-focus-border-color);
			}
		});
	});
}

// When the parent is focused
.focus({
	.checkbox {
		.applySkins({
			.checkboxColors(@sand-checkbox-focus-color, @sand-checkbox-focus-bg-color, @sand-checkbox-focus-border-color);

			&.selected {
				.checkboxColors(@sand-checkbox-selected-focus-color, @sand-checkbox-selected-focus-bg-color, @sand-checkbox-selected-focus-border-color);
			}
		});
	}
}, parent);
