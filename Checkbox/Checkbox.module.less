// Checkbox.module.less
//
@import "../styles/variables.less";
@import "../styles/mixins.less";
@import "../styles/skin.less";

// Local mixin to make rule application more consistent.
.checkboxColors (@color, @bg, @border) {
	color: @color;
	background-color: @bg;
	box-shadow: 0 0 0 @sand-checkbox-border-width @border;
}

.checkbox {
	display: inline-block;
	position: relative;

	.icon {
		margin: 0;	// Needed to apply here insetad of on `.checkbox` due to .icon.size precedence :(
		border-radius: @sand-checkbox-border-radius;
		position: relative;
		text-align: center;
	}

	// Spottable version of the Checkbox
	.spottable({
		.bg {
			position: absolute;
			.position(@sand-checkbox-container-position);
			border-radius: @sand-checkbox-container-border-radius;
			z-index: -1;
		}
	});

	.applySkins({
		.icon {
			.checkboxColors(
				@sand-checkbox-color,
				@sand-checkbox-bg-color,
				@sand-checkbox-border-color
			);
		}


		&.indeterminate {
			.icon {
				.checkboxColors(
					@sand-checkbox-indeterminate-color,
					@sand-checkbox-indeterminate-bg-color,
					@sand-checkbox-indeterminate-border-color
				);
			}
		}

		&.selected {
			&:not(.indeterminate) {
				.icon {
					.checkboxColors(
						@sand-checkbox-selected-color,
						@sand-checkbox-selected-bg-color,
						@sand-checkbox-selected-border-color
					);
				}

			}
		}

		.disabled({
			&.selected {
				&:not(.indeterminate) {
					.icon {
						.checkboxColors(
							@sand-checkbox-disabled-selected-color,
							@sand-checkbox-disabled-selected-bg-color,
							@sand-checkbox-disabled-selected-border-color
						);
					}

				}
			}
		});

		// Spottable version of the Checkbox
		.spottable({
			.bg {
				.sand-spotlight-resting-colors();
			}
		});

		.focus({
			.bg {
				.sand-spotlight-focus-colors();
			}

			.icon {
				.checkboxColors(
					@sand-checkbox-focus-color,
					@sand-checkbox-focus-bg-color,
					@sand-checkbox-focus-border-color
				);
			}

			&.indeterminate {
				.icon {
					.checkboxColors(
						@sand-checkbox-indeterminate-selected-focus-color,
						@sand-checkbox-indeterminate-selected-focus-bg-color,
						@sand-checkbox-indeterminate-selected-focus-border-color
					);
				}
			}

			&.selected {
				&:not(.indeterminate) {
					.icon {
						.checkboxColors(
							@sand-checkbox-selected-focus-color,
							@sand-checkbox-selected-focus-bg-color,
							@sand-checkbox-selected-focus-border-color
						);
					}
				}
			}

			.disabled({
				&.selected {
					&:not(.indeterminate) {
						.icon {
							.checkboxColors(
								@sand-checkbox-focus-disabled-selected-color,
								@sand-checkbox-focus-disabled-selected-bg-color,
								@sand-checkbox-focus-disabled-selected-border-color
							);
						}

					}
				}
			});
		});

		.sand-disabled({
			.icon {
				.sand-disabled-colors();
			}

			.focus({
				.bg {
					.sand-disabled-focus-bg-colors();
				}
				.icon {
					.sand-disabled-focus-content-colors();
				}
			});
		});
	});
}

.disabled({
	.checkbox {
		.applySkins({
			&.selected {
				&:not(.indeterminate) {
					.icon {
						.checkboxColors(
							@sand-checkbox-disabled-selected-color,
							@sand-checkbox-disabled-selected-bg-color,
							@sand-checkbox-disabled-selected-border-color
						);
					}

				}
			}
		});
	}
});

// When the parent is focused
.focus({
	.checkbox {
		.applySkins({
			.icon {
				.checkboxColors(
					@sand-checkbox-focus-color,
					@sand-checkbox-focus-bg-color,
					@sand-checkbox-focus-border-color
				);
			}


			&.indeterminate {
				.icon {
					.checkboxColors(
						@sand-checkbox-indeterminate-selected-focus-color,
						@sand-checkbox-indeterminate-selected-focus-bg-color,
						@sand-checkbox-indeterminate-selected-focus-border-color
					);
				}
			}

			&.selected {
				&:not(.indeterminate) {
					.icon {
						.checkboxColors(
							@sand-checkbox-selected-focus-color,
							@sand-checkbox-selected-focus-bg-color,
							@sand-checkbox-selected-focus-border-color
						);
					}
				}
			}

			// Spottable version of the Checkbox
			.spottable({
				.bg {
					.sand-spotlight-focus-colors();
				}
			});
		});
	}

	.disabled({
		.checkbox {
			.applySkins({
				&.selected {
					&:not(.indeterminate) {
						.icon {
							.checkboxColors(
								@sand-checkbox-focus-disabled-selected-color,
								@sand-checkbox-focus-disabled-selected-bg-color,
								@sand-checkbox-focus-disabled-selected-border-color
							);
						}

					}
				}
			});
		}
	});
}, parent);
