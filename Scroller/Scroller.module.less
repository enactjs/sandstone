// Scroller.module.less
//
@import "../styles/colors.less";
@import "../styles/mixins.less";
@import "../styles/variables.less";

.focusableBody {
	display: flex;
	flex-direction: column;
	width: 100%;
	height: 100%;
	overflow: inherit;

	&::before {
		content: '';
		position: absolute;
		.position(0);
		border-radius: @sand-scroll-focusablebody-focus-border-radius;
		opacity: 0;
	}

	.focus({
		&::before {
			background-color: @sand-scroll-focusablebody-focus-bg-color;
			opacity: 1;
		}
	})
}

.verticalFadeout {
	padding: @sand-scroll-vertical-fade-out-padding;
	mask-image: linear-gradient(transparent, @sand-black @sand-scroll-fade-out-size, @sand-black calc(100% - @sand-scroll-fade-out-size), transparent 100%);

	.focusableBody & {
		padding: @sand-scroll-focusablebody-padding;
		.enact-locale-rtl({
			padding: @sand-scroll-focusablebody-padding-rtl;
		});
		mask-image: linear-gradient(transparent @sand-scroll-fade-out-offset, @sand-black calc(@sand-scroll-fade-out-offset + @sand-scroll-fade-out-size), @sand-black calc(100% - @sand-scroll-fade-out-size - @sand-scroll-fade-out-offset), transparent calc(100% - @sand-scroll-fade-out-offset));
	}
}

.horizontalFadeout {
	padding: @sand-scroll-horizontal-fade-out-padding;
	mask-image: linear-gradient(to right, transparent, @sand-black @sand-scroll-fade-out-size, @sand-black calc(100% - @sand-scroll-fade-out-size), transparent 100%);
}
