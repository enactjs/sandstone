// Sprite.module.less
//
@import "../styles/mixins.less";
@import "../styles/variables.less";
@import "../styles/skin.less";

.sprite {
	display: inline-block;
	overflow: hidden;
	position: relative;
	height: var(--sand-sprite-height);
	width: var(--sand-sprite-width);

	.image {
		// This calculation is used in 2 places, so for maintainability, it has been split out into LESS variables
		@image-height: ~"calc(var(--sand-sprite-height) * var(--sand-sprite-rows))";
		@image-width: ~"calc(var(--sand-sprite-width) * var(--sand-sprite-columns))";

		margin: 0;
		position: absolute;
		top: calc(var(--sand-sprite-offset-top, 0) * -1);
		left: calc(var(--sand-sprite-offset-left, 0) * -1);
		background-position: top left;
		height: calc(@image-height + var(--sand-sprite-offset-top, 0));
		width: calc(@image-width + var(--sand-sprite-offset-left, 0));
		background-size: @image-width @image-height;
		will-change: transform;
	}

	// Code to help debug sprites
	:global(.debug.sprites) & {
		outline: 1px dashed orange;
		overflow: visible;

		.image {
			outline: 1px dashed cyan;
		}
	}
}

.focus({
	.sprite {
		.image {
			filter: invert(0.8);
		}
	}
}, parent);
