// IconSprite.module.less
//
@import "../styles/mixins.less";
@import "../styles/variables.less";
@import "../styles/skin.less";

// Create a module-level LESS variable containing a our CSS variable with a default assigned.
// Assign the default here, rather than assigning it on every usage of --icon-size.
@icon-size: ~"var(--icon-size, " @sand-icon-small-size ~")";

.iconSprite {
	display: inline-block;
	overflow: hidden;
	outline: 1px dashed orange;
	position: relative;
	height: var(--sand-icon-sprite-height);
	width: var(--sand-icon-sprite-width);

	.image {
		margin: 0;
		position: absolute;
		top: var(--sand-icon-sprite-offset-top, 0);
		left: var(--sand-icon-sprite-offset-left, 0);
		transition: transform var(--sand-icon-sprite-duration) steps(calc(var(--sand-icon-sprite-rows) * var(--sand-icon-sprite-columns)));
		height: calc(var(--sand-icon-sprite-height) * var(--sand-icon-sprite-rows) + var(--sand-icon-sprite-offset-top, 0));
		width: calc(var(--sand-icon-sprite-width) * var(--sand-icon-sprite-columns) + var(--sand-icon-sprite-offset-left, 0));
	}

	&.running {
		background-position: center 100%;
		transform: translate;
	}
}

// .focus({
// 	.icon {
// 		background-position: center 100%;

// 		.applySkins({
// 			color: inherit;
// 		});
// 	}
// }, parent);

// .muted({
// 	.focus({
// 		.icon {
// 			// Repeat the same rules from the resting rules
// 			background-position: center 0;

// 			.applySkins({
// 				color: inherit;
// 			});
// 		}
// 	}, parent);
// }, parent);
