// SelectableItem.module.less
//
@import "../styles/mixins.less";
@import "../styles/variables.less";
@import "../styles/skin.less";

// Interally theme our implementation using published classes from ToggleIcon
.toggleIcon {
	.icon {
		@dot-size: (@sand-selectable-item-indicator-size - 3px * 2);

		font-size: @dot-size;
		text-align: left;
		width: @sand-selectable-item-indicator-width;
		margin: 0;

		.moon-custom-text({
			@dot-size-large: (@sand-selectable-item-indicator-size-large - 3px * 2);

			font-size: @dot-size-large;
			width: @sand-selectable-item-indicator-width-large;
		});
	}

	&:not(.selected) {
		display: none;
	}

	// Skin colors
	.applySkins({
		color: @sand-accent;
	});
}

// Icon inherits its color. .toggleIcon (a wrapper for icon) above sets itself to a color.
// Reset the color of .toggleIcon to whatever this element's parent is instead of imposing a
// specific color. (Reset the line above to natural inherited color.)
.focus({
	.toggleIcon {
		.applySkins({
			color: inherit;
		});
	}
});

.muted({
	.focus({
		.toggleIcon {
			.applySkins({
				color: @sand-accent;
			});
		}
	}, parent);
}, parent);
