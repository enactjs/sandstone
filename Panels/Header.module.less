// Header.module.less
//
@import "../styles/mixins.less";
@import "../styles/variables.less";
@import "../styles/skin.less";

.header {
	position: relative;
	max-width: 100%;
	background-color: transparent;
	background-repeat: no-repeat;
	background-position: top left;
	transition: transform @sand-header-animation-duration ease-out; // to support collapsing header
	.border-box();

	///
	/// Begin states of header configuration
	///

	// Titles-only layout when in minimal-mode (there are no children in the Nav area)
	&:not(.centered) {
		&:not(.withChildren) {
			.titlesRow {
				// The following updates .subtitle to be removed from the measurement calculations for
				// vertical centering in a "standard" header, so the title can vertically align with the
				// side buttons. When *not* in "standard" type, the side buttons should be vertically
				// aligned with both the title and subtitle.
				.subtitle {
					position: absolute;
					right: 0;
					left: 0;
				}
			}
		}
	}

	&:not(.withChildren) .titlesRow {
		padding-bottom: @sand-header-subtitle-height;
	}

	&.centered {
		.inputTransition,
		.slotAbove,
		.slotBelow {
			text-align: center;
		}

		// Limit the width of `title` and `subtitle` to avoid overlaps with the previous/next buttons when the title and/or the subtitle are too long.
		.title,
		.subtitle {
			max-width: @sand-header-title-max-width;
		}
	}

	.backContainer {
		display: inline-block;
		width: 0;
		opacity: 0.3;
		transition: width 400ms ease-in-out, transform 400ms ease-in-out, opacity 200ms ease-out;
		transform: scale(0);
		transform-origin: center left;
		will-change: width, transform, opacity;
	}

	.back {
		margin-inline-start: 0;
	}

	&.showBack {
		.backContainer {
			opacity: 1;
			width: (@sand-button-height + @sand-component-spacing);
			transform: scale(1);
		}
	}

	///
	/// Begin child node rules configuration, shared across multiple types
	///

	.inputTransition {
		position: absolute;
		top: 50%;
		right: 0;
		left: 0;
		transform: translateY(-50%);
		z-index: 1;
	}

	.titlesRow {
		transition: transform @sand-header-animation-duration ease-out, opacity @sand-header-animation-duration ease-out;
	}

	.title,
	.subtitle {
		margin: 0;
	}

	.title {
		will-change: width; // Preparation for the back button transition
	}

	.slotAbove {
		margin: @sand-header-slotabove-margin;
	}

	// Align `slotAfter` contents to the right LTR
	.slotAfter {
		text-align: right;

		// Align `slotAfter` contents to the left in RTL
		:global(.enact-locale-right-to-left) & {
			text-align: left;
		}
	}

	.slotBelow {
		margin: @sand-header-slotbelow-margin;
	}

	.line {
		border: 1px solid transparent; // Generic rule to set the size/positioning, but leave it invisible for later customization
		margin: 0;
	}

	&.featureContent {
		transform: @sand-header-featurecontent-transform;;

		.titlesRow {
			transform: @sand-header-featurecontent-title-transform;
			opacity: @sand-header-featurecontent-title-opacity;
		}
	}


	///
	/// Begin "types" rules configuration
	///

	// Standard Header
	&.standard {
		margin: @sand-header-standard-margin;
		padding: @sand-header-standard-padding;
	}

	// Compact Header
	&.compact {
		margin: @sand-header-compact-margin;
		padding: @sand-header-compact-padding;

		.title {
			.sand-font-size(@sand-header-compact-title-font-size, @sand-non-latin-header-compact-title-font-size);
		}

		.line {
			border-bottom-width: @sand-header-compact-border-width;
			margin: @sand-header-compact-line-margin;
		}
	}

	// Wizard Header
	&.wizard {
		margin: @sand-header-wizard-margin;
		padding: @sand-header-wizard-padding;

		.title {
			.sand-font-size(@sand-header-wizard-title-font-size, @sand-non-latin-header-wizard-title-font-size);
		}
	}

	// Mini Header
	&.mini {
		margin: @sand-header-mini-margin;
		padding: @sand-header-mini-padding;

		.titlesRow {
			padding: 0;
		}

		.titleCell {
			width: auto;
		}

		.title {
			.sand-font-size(@sand-header-mini-title-font-size, @sand-non-latin-header-mini-title-font-size);
		}

		.slotBefore >:first-child {
			margin-inline-start: 0;
		}

		.slotAfter >:first-child {
			margin-inline-end: 0;
		}
	}

	// Skin colors
	.applySkins({
		&.compact {
			.line {
				border-bottom-color: @sand-header-compact-border-color;
			}
		}
	});
}

// Intentionally low precedence for easier overriding
.input {
	width: 1440px;
}
