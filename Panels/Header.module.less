// Header.module.less
//
@import "../styles/mixins.less";
@import "../styles/skin.less";
@import "../styles/variables.less";

.header {
	position: relative;
	max-width: 100%;
	background-color: transparent;
	background-repeat: no-repeat;
	background-position: top left;
	.border-box();

	///
	/// Begin states of header configuration
	///

	.titlesRow {
		padding-bottom: @sand-header-subtitle-height;

		// The following alters .subtitle to be removed from the measurement calculations for so the
		// title can vertically align with the side buttons (ignoring the dimensions of subtitle).
		.subtitle {
			position: absolute;
			right: 0;
			left: 0;
		}

		.back {
			margin-inline-start: 0;

			.sand-custom-text({
				.sand-small-button-text();
				height: @sand-button-small-height;
				line-height: (@sand-button-small-height - (2 * @sand-button-border-width));
				min-width: @sand-button-small-height;
			});
		}

		.close {
			margin-inline-end: 0;
		}
	}

	&.wizard {
		.titlesRow {
			padding-bottom: (@sand-header-subtitle-height * @sand-header-wizard-subtitle-lines);
		}
	}

	.slotBefore,
	.slotAfter,
	.slotSizer {
		white-space: nowrap;
	}

	.slotSizer {
		display: inline-block;
	}

	&.centered {
		.slotAbove,
		.slotBelow {
			text-align: center;
		}
	}

	///
	/// Begin child node rules configuration, shared across multiple types
	///

	.title,
	.subtitle {
		margin: 0;
	}

	.slotAbove {
		margin: @sand-header-slotabove-margin;
	}

	// Align `slotAfter` contents to the right LTR
	.slotAfter {
		text-align: right;

		// Align `slotAfter` contents to the left in RTL
		.enact-locale-rtl({
			text-align: left;
		});
	}

	.slotBelow {
		margin: @sand-header-slotbelow-margin;
	}

	///
	/// Begin "types" rules configuration
	///

	// Most types intend for the first and last buttons on the left and right
	// butt right up against the edge, for alignment with the content.
	.standard,
	.compact,
	.mini {
		.slotBefore > *:first-child {
			margin-inline-start: 0;
		}
		.slotAfter > *:last-child {
			margin-inline-end: 0;
		}
	}

	// Standard Header
	&.standard {
		margin: @sand-header-standard-margin;
		padding: @sand-header-standard-padding;

		.subtitle,
		.title {
			padding: @sand-header-standard-title-padding;
		}

		.subtitle {
			margin: @sand-header-standard-subtitle-margin;
		}
	}

	// Compact Header
	&.compact {
		margin: @sand-header-compact-margin;
		padding: @sand-header-compact-padding;

		.title {
			padding: @sand-header-compact-title-padding;
		}

		.subtitle {
			padding: @sand-header-compact-subtitle-padding;
		}

		.title {
			.sand-font-size(@sand-header-compact-title-font-size);
		}
	}

	// Wizard Header
	&.wizard {
		margin: @sand-header-wizard-margin;
		padding: @sand-header-wizard-padding;

		&.noSubtitle {
			padding-bottom: @sand-header-wizard-nosubtitle-padding-bottom;
		}

		.titleContainer {
			// absolutely position the incoming title
			&:nth-child(2) {
				top: 0;
				position: absolute;
				width: 100%;
			}
		}

		.title {
			.sand-font-size(@sand-header-wizard-title-font-size);
			padding: @sand-header-wizard-title-padding;
		}

		.subtitle {
			.sand-multi-line-ellipsis(@sand-header-wizard-subtitle-lines);
			padding: @sand-header-wizard-subtitle-padding;
		}

		&.centered {
			.subtitle {
				text-align: center;
			}
		}
	}

	// Mini Header
	&.mini {
		margin: @sand-header-mini-margin;
		padding: @sand-header-mini-padding;

		.titlesRow {
			padding: 0;
		}

		.titleCell {
			width: auto;
		}

		.title {
			.sand-font-size(@sand-header-mini-title-font-size);
		}

		&.withSubtitle:not(.noSubtitle) {
			.titlesRow {
				padding-bottom: @sand-header-subtitle-height;
			}
		}
	}

	&.noSubtitle {
		.titlesRow {
			padding-bottom: 0;
		}
	}

	.applySkins({
		&.shadowed {	
			.subtitle,
			.title {
				text-shadow: @sand-header-text-shadow;
			}
		}
	});
}
