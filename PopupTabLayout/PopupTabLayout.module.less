// Popup.module.less
//
@import "../styles/mixins.less";
@import "../styles/variables.less";
@import "../styles/skin.less";

.popupTabLayout {
	margin: 120px 60px;

	.tabs {
		padding: 48px 0; // Can likely use component-spacing
		margin-inline-end: 36px;
	}

	.content {
		margin-top: 0; // Overrides a TabLayout style which may need to get refactored
		height: 100%;
	}


	// Skin colors
	.applySkins({
		background-color: transparent;

		.tabs,
		.content .panels {
			border-radius: 24px;
			background-color: fade(@sand-popup-bg-color, 90%);
		}

	});
}

// Overrides for Popup
.popupTransitionContainer {
	width: 100%;
}

.popup {
	> .body {
		padding: 0;
		position: relative;
	}
}

// Overrides for Panels
.panels {
	position: relative;
	max-height: 100%;

	> .viewport {
		position: static;
		.position(auto);

		> :nth-child(2) {
			// the second element in the ViewManager should be offset by the container width
			// so the transition can position two static views next to each other safely,
			// since transform is not available (to offset by its own width).
			left: -100%;
		}
	}
}

// Overrides for Panel
.panel {
	position: relative;
	display: inline-flex;
	padding: 0;

	> .body {
		flex: 0 1 auto;  // Allow this node to vertically shrink to fit the content but not extend larger than the container.
	}
}

// Supporting concave click area
.popup > .body {
	pointer-events: none;

	.tabs,
	.content {
		pointer-events: auto;
	}
}
