@import "../styles/mixins.less";
@import "../styles/skin.less";
@import "../styles/variables.less";

// Module level variables, for use only in this file
@fixedpopuppanels-max-height: ~"calc(100vh -" (.extract(@sand-fixedpopuppanels-margin, top)[] + .extract(@sand-fixedpopuppanels-margin, bottom)[])~")";

.fixedPopupPanels {
	// Overrides for Panels - the & just refers to this element. Using a block here to visually compartmentalize the overrides apart from the general styles.
	& {
		position: relative;
		.position(auto);
		max-height: 100%;

		.viewport {
			position: static;
			.position(auto);
			pointer-events: auto;
		}
	}

	&.fullHeight {
		.viewport {
			height: 100%;
		}
	}

	&.narrow {
		width: @sand-fixedpopuppanels-width;
	}

	&.half {
		width: @sand-fixedpopuppanels-half-width;
	}

	> .body {
		pointer-events: inherit;
		padding: 0;

		.enact-locale-rtl({
			padding: 0;
		});
	}

	// Skin colors
	.applySkins({
		background-color: transparent;

		// Overrides for Viewport
		.viewport {
			border-radius: @sand-fixedpopuppanels-border-radius;
			box-shadow: @sand-fixedpopuppanels-shadow;
			outline-color: @sand-overlay-outline-color;
			outline-style: @sand-overlay-outline-style;
			outline-width: @sand-overlay-outline-width;
			outline-offset: -@sand-overlay-outline-width;
		}

		&.scrimTranslucent {
			.viewport {
				background-color: @sand-fixedpopuppanels-bg-color;
			}
		}

		&.scrimNone,
		&.scrimTransparent {
			.viewport {
				background-color: @sand-fixedpopuppanels-scrimtransparent-bg-color;
			}
		}
	});
}

// Overrides for Panel
.panel {
	padding: @sand-fixedpopuppanels-panel-padding;
	max-height: @fixedpopuppanels-max-height;

	> .body {
		display: flex;
		flex-direction: column;
		padding: @sand-fixedpopuppanels-panel-body-padding;
		flex: 1 1 auto;
	}
}
